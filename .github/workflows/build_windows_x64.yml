name: Binaries - Windows x64

env:
    output_basename: sqlite3-windows-x64
    compilation_options: |
                    -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT \
                    -DSQLITE_ENABLE_DBSTAT_VTAB \
                    -DSQLITE_ENABLE_BYTECODE_VTAB \
                    -DSQLITE_ENABLE_COLUMN_METADATA \
                    -DSQLITE_ENABLE_EXPLAIN_COMMENTS \
                    -DSQLITE_ENABLE_FTS3 \
                    -DSQLITE_ENABLE_FTS4 \
                    -DSQLITE_ENABLE_FTS5 \
                    -DSQLITE_ENABLE_GEOPOLY \
                    -DSQLITE_ENABLE_JSON1 \
                    -DSQLITE_ENABLE_RTREE \
                    -DSQLITE_ENABLE_MATH_FUNCTIONS
    ICU_URL: https://mirror.msys2.org/mingw/mingw64/mingw-w64-x86_64-icu-72.1-1-any.pkg.tar.zst
    ICU_VER: '72'

on:
    workflow_dispatch:
        inputs:
          INT_VER:
            description: 'SQLite version as integer'
            required: true
            type: number
          PARENT_RUN_ID:
            description: 'ID of workflow that created appropriate amalgamation artifact'
            required: true
            type: number

jobs:
    build:
        runs-on: windows-2019

        steps:
            - name: Prepare
              shell: bash
              run: |
                OUTPUT_NAME=$output_basename-${{ inputs.INT_VER }}
                OUTPUT_DIR=$(pwd)/$OUTPUT_NAME
                echo "OUTPUT_NAME=$OUTPUT_NAME" >> $GITHUB_ENV
                echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
                mkdir $OUTPUT_DIR
                mkdir ext
              
            - name: Fetch artifact URLs
              shell: bash
              run: |
                resp=$(
                        curl -s -L \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/pawelsalawa/sqlite3-sqls/actions/runs/${{ inputs.PARENT_RUN_ID }}/artifacts
                    )
                
                AMALGAMATION_URL=$(echo $resp | jq -r '.artifacts[] | select(.name | startswith("sqlite3-amalgamation")) | .archive_download_url')
                EXT_URL=$(echo $resp | jq -r '.artifacts[] | select(.name | startswith("sqlite3-ext")) | .archive_download_url')
                
                echo "AMALGAMATION_URL=$AMALGAMATION_URL" >> $GITHUB_ENV
                echo "EXT_URL=$EXT_URL" >> $GITHUB_ENV
              
            - name: Download Amalgamation
              shell: bash
              run: |
                SRC_DIR=amalgamation
                mkdir $SRC_DIR
                cd $SRC_DIR
                echo "SRC_DIR=$(pwd)" >> $GITHUB_ENV
                
                ZIP_NAME=sqlite3-amalgamation-${{ inputs.INT_VER }}.zip
                echo "Downloading $ZIP_NAME from $AMALGAMATION_URL"
                curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o $ZIP_NAME $AMALGAMATION_URL
                ls -l

                unzip $ZIP_NAME
                ls -l

            - name: Compile SQLite3
              shell: bash
              working-directory: ${{ env.SRC_DIR }}
              run: |
                gcc sqlite3.c -Os -fpic -DWIN64 -m64 -I. -shared -o sqlite3.dll ${{ env.compilation_options }}
                gcc shell.c sqlite3.c -Os -fpic -DWIN64 -m64 -I. -o sqlite3.exe ${{ env.compilation_options }}
                ls -l
                
                cp sqlite3.dll sqlite3.exe sqlite3.h sqlite3ext.h $OUTPUT_DIR/
                
            - name: Install extension dependencies
              shell: bash
              run: |
                cd ..
                curl -L "$ICU_URL" | tar -xf - --zstd
                mv mingw64 icu
                cd icu
                echo "ICU_DIR=$(pwd)" >> $GITHUB_ENV

            - name: Compile SQLite3 extensions
              shell: bash
              working-directory: ext
              run: |
                ZIP_NAME=sqlite3-ext-${{ inputs.INT_VER }}.zip
                echo "Downloading $ZIP_NAME from $EXT_URL"
                curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o $ZIP_NAME $EXT_URL
                ls -l
                
                unzip $ZIP_NAME
                ls -l
                
                EXT_BIN=.output
                mkdir $EXT_BIN
                
                FLAGS="-shared -Os -fpic -DWIN64 -m64 -I$SRC_DIR -L$OUTPUT_DIR -lsqlite3"
                set -x
                for f in compress sqlar; do
                    gcc misc/$f.c -Imisc $FLAGS -lzlib1 -o $EXT_BIN/$f.dll
                done
                
                for f in csv decimal eval ieee754 percentile rot13 series uint uuid zorder; do
                    gcc misc/$f.c -Imisc $FLAGS -o $EXT_BIN/$f.dll
                done
                for f in icu; do
                    gcc icu/$f.c -I$ICU_DIR/include -L$ICU_DIR/lib -licuio -licuin -licuuc -licudt $FLAGS -o $EXT_BIN/$f.dll
                done
                set +x
                
                cd $ICU_DIR/bin
                cp libicuio$ICU_VER.dll libicuin$ICU_VER.dll libicuuc$ICU_VER.dll libicudt$ICU_VER.dll $EXT_BIN
                
                cd $EXT_BIN
                ls -l
                mkdir $OUTPUT_DIR/ext
                cp -R * $OUTPUT_DIR/ext
                
            - name: Upload SQLite3 artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ env.OUTPUT_DIR }}
                path: ${{ env.OUTPUT_DIR }}
