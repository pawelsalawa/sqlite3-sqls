name: Binaries - MacOS Universal

env:
    output_basename: sqlite3-macos-universal
    compilation_options: |
                    -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT \
                    -DSQLITE_ENABLE_DBSTAT_VTAB \
                    -DSQLITE_ENABLE_BYTECODE_VTAB \
                    -DSQLITE_ENABLE_COLUMN_METADATA \
                    -DSQLITE_ENABLE_EXPLAIN_COMMENTS \
                    -DSQLITE_ENABLE_FTS3 \
                    -DSQLITE_ENABLE_FTS4 \
                    -DSQLITE_ENABLE_FTS5 \
                    -DSQLITE_ENABLE_GEOPOLY \
                    -DSQLITE_ENABLE_JSON1 \
                    -DSQLITE_ENABLE_RTREE \
                    -DSQLITE_ENABLE_MATH_FUNCTIONS

on:
    workflow_dispatch:
        inputs:
          INT_VER:
            description: 'SQLite version as integer'
            required: true
            type: number
          PARENT_RUN_ID:
            description: 'ID of workflow that created appropriate amalgamation artifact'
            required: true
            type: number

jobs:
    build:
        runs-on: macos-14

        steps:
            - name: Download Amalgamation
              shell: bash
              run: |
                set -x
                URL=$(
                    curl -s -L \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        https://api.github.com/repos/pawelsalawa/sqlite3-sqls/actions/runs/${{ inputs.PARENT_RUN_ID }}/artifacts \
                        | jq -r '.artifacts[0].archive_download_url'
                    )
                    
                ZIP_NAME=sqlite3-amalgamation-${{ inputs.INT_VER }}.zip
                echo "Downloading $ZIP_NAME from $URL"
                curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -o $ZIP_NAME $URL
                ls -l
                
                unzip $ZIP_NAME
                ls -l

                gcc sqlite3.c -arch arm64 -arch x86_64 -mmacosx-version-min=11 -lpthread -ldl -lm -Os -fpic -shared -o libsqlite3.0.dylib ${{ env.compilation_options }}
                gcc shell.c sqlite3.c -arch arm64 -arch x86_64 -mmacosx-version-min=11 -lpthread -ldl -lm -Os -fpic -o sqlite3 ${{ env.compilation_options }}
                ls -l
                
                echo "Arch for libsqlite3.0.dylib"
                lipo -archs libsqlite3.0.dylib
                
                echo "Arch for sqlite3"
                lipo -archs sqlite3

                OUTPUT_DIR=${{ env.output_basename }}-${{ inputs.INT_VER }}
                echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
                mkdir $OUTPUT_DIR
                cp libsqlite3.0.dylib sqlite3 sqlite3.h sqlite3ext.h $OUTPUT_DIR/
                
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ env.OUTPUT_DIR }}
                path: ${{ env.OUTPUT_DIR }}

