env:
    SQLITE_PAGE: https://sqlite.org
    OUTPUT_FILES: sqlite3.c sqlite3.h sqlite3ext.h shell.c
    WORKFLOWS: build_linux_x64.yml build_windows_x64.yml build_windows_x86.yml build_macos_x64.yml build_macos_arm.yml
 
name: Debug Generate Amalgamation

on:
    workflow_dispatch:
        inputs:
 
jobs:
    build:
        runs-on: ubuntu-20.04

        steps:
            - name: Clone GH scripts
              uses: actions/checkout@v3
              with:
                repository: pawelsalawa/gh-action-scripts
                ref: main

            - name: Set environment variables for scripts
              run: |
                echo "REPO=${{ github.repository }}" >> $GITHUB_ENV
                echo "TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
                chmod +x scripts/*.sh
                echo "SCRIPTS=$(pwd)/scripts" >> $GITHUB_ENV

            - name: Check latest version
              shell: bash
              run: |
                curl -s https://sqlite.org/download.html > download.html
                SQLITE_SRC_ZIP=$(cat download.html | grep -o 'sqlite-src-[0-9]*\.zip' | head -1)
                SQLITE_URL=${{ env.SQLITE_PAGE }}/$(cat download.html | grep -o '[0-9]*\/sqlite-src-[0-9]*\.zip' | head -1)
                INT_VER=$(echo $SQLITE_SRC_ZIP | grep -o '[0-9]*')
                OUTPUT_DIR=sqlite3-amalgamation-$INT_VER
                EXT_OUTPUT_DIR=sqlite3-extensions-src-$INT_VER
                SQLITE_VERSION=$($SCRIPTS/convert_int_ver.sh $INT_VER)

                echo "Version INT: $INT_VER"
                echo "Version: $SQLITE_VERSION"
                echo "URL: $SQLITE_URL"
                
                echo "SQLITE_VERSION=$SQLITE_VERSION" >> $GITHUB_ENV
                echo "INT_VER=$INT_VER" >> $GITHUB_ENV
                echo "SQLITE_URL=$SQLITE_URL" >> $GITHUB_ENV
                echo "SQLITE_SRC_ZIP=$SQLITE_SRC_ZIP" >> $GITHUB_ENV
                echo "OUTPUT_DIR=$OUTPUT_DIR" >> $GITHUB_ENV
                echo "EXT_OUTPUT_DIR=$EXT_OUTPUT_DIR" >> $GITHUB_ENV

            - name: Create release
              shell: bash
              run: |
                body="Based on SQLite3 v$SQLITE_VERSION. Please find artifacts to download below."
                payload="{\"tag_name\":\"v$SQLITE_VERSION\",\"name\":\"v$SQLITE_VERSION\",\"body\":\"$body\",\"draft\":true}"
                releaseid=$($SCRIPTS/create_draft_release.sh "$payload")
                echo "RELEASE_ID: $releaseid"
                echo "RELEASE_ID=$releaseid" >> $GITHUB_ENV
                